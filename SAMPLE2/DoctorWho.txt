main,main_func func_decs
main_func,TARDIS ( ) { code }
func_decs,func_dec func_decs
func_decs,

code,code_line code
code,code_line
code_line,safe_code_line
code_line,if_stmt
code_line,unless_stmt
safe_code_line,declaration ;
safe_code_line,assignment ;
safe_code_line,return_stmt ;
safe_code_line,DELETE ;
safe_code_line,REGENERATE ;
safe_code_line,switch_stmt
safe_code_line,print_stmt ;
safe_code_line,sonic ( type ) ;
safe_code_line,func_call ;
safe_code_line,loop

print_stmt,demat ( expr ) ;
print_stmt,demat ( cond ) ;
print_stmt,demat ( func_call ) ;
print_stmt,demat ( assignment ) ;

//void,int, float, char, string, boolean, array
type,rose
type,martha
type,donna
type,amy
type,clara
type,jo
type,sarahJane

declaration,type var_list
var_list,varname &com; var_list
var_list,assignment &com; var_list
var_list,varname
var_list,assignment

assignment,varname = assignment
assignment,varname = cond
assignment,varname = expr
assignment,varname = func_call
assignment,varname array_index = func_call
assign_list,assignment &com; assign_list
assign_list,assignment
array_index,[ int ] array_index
array_index,[ int ]

array,[ array_vals ]
array,Array < type > ( expr )
array_vals,
array_vals,cond array_vals
array_vals,expr array_vals

value,int
value,float
value,char
value,array
value,string

cond,cond || cond2
cond,cond2
cond2,cond2 && cond3
cond2,cond3
cond3,! cond3
cond3,cond4
cond4,expr <= expr
cond4,expr >= expr
cond4,expr < expr
cond4,expr > expr
cond4,cond5
cond5,expr == expr
cond5,expr != expr
cond5,bool_value
cond5,( cond )

expr,expr + expr2
expr,expr - expr2
expr,expr2
expr2,expr2 * expr3
expr2,expr2 / expr3
expr2,expr2 % expr3
expr2,expr3
expr3,expr4 ^ expr3
expr3,expr4
//check if not 	boolean
expr4,( assignment )
expr4,( expr )
expr4,value
expr4,varname
expr4,++ varname
expr4,-- varname
expr4,varname ++
expr4,varname --

code_body,safe_code_line
code_body,{ code }
if_stmt,dontblink ( cond ) code_body
if_stmt,dontblink ( cond ) code_body blinkandyouredead code_body
unless_stmt,dontevenblink ( cond ) code_body
unless_stmt,dontevenblink ( cond ) code_body blinkandyouredead code_body
switch_stmt,exterminate ( cond ) { switch_body }
switch_stmt,exterminate ( expr ) { switch_body }
switch_body,case_body switch_body
switch_body,default_body
case_body,doctor value : code
case_body,doctor bool_value : code
default_body,hartnell : code

loop,for_loop
loop,while_loop
loop,do_while_loop
loop,until_loop
loop,repeat_until_loop
for_loop,tomBaker ( assign_list ; cond ; assignment ) code_body
for_loop,tomBaker ( type assign_list ; cond ; assignment ) code_body
for_loop,tomBaker ( assign_list ; cond ; expr ) code_body
for_loop,tomBaker ( type assign_list ; cond ; expr ) code_body
while_loop,wobbly ( cond ) code_body
do_while_loop,wibbly code_body wobbly ( cond ) ;
until_loop,wimey ( cond ) code_body
repeat_until_loop,timey code_body wimey ( cond ) ;

return_stmt,gallifrey assignment
return_stmt,gallifrey cond
return_stmt,gallifrey expr

func_dec,type varname ( func_params ) { code }
func_params,type varname &com; func_params
func_params,type ... varname

func_call,varname ( var_list )